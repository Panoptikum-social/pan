=== / ===
  get("/pro_features", PageFrontendController, :pro_features)
  get("/personas/:id/grant_access", PersonaFrontendController, :grant_access)
  get("/forgot_password", UserController, :forgot_password)
  post("/request_login_link", UserController, :request_login_link)
  get("/sessions/login_via_token", SessionController, :login_via_token)
  get("/sessions/confirm_email", SessionController, :confirm_email)
  live("/recommendations", Live.Recommendation.Index, :index, as: :recommendation_frontend)

=== PAN ===
  get("/users/payment_info", UserFrontendController, :payment_info)
  post("/users/like_all_subscribed", UserFrontendController, :like_all_subscribed)
  post("/users/follow_all_subscribed", UserFrontendController, :follow_all_subscribed)
  get("/my_podcasts", UserFrontendController, :my_podcasts)
  get("/my_profile", UserFrontendController, :my_profile)
  get("/my_data", UserFrontendController, :my_data)
  delete("/delete_my_account", UserFrontendController, :delete_my_account)
  get("/edit", UserFrontendController, :edit)
  put("/update", UserFrontendController, :update)
  get("/edit_password", UserFrontendController, :edit_password)
  put("/update_password", UserFrontendController, :update_password)
  post("/go_pro", UserFrontendController, :go_pro)
  post("/personas/:id/claim", PersonaFrontendController, :claim)
  get("/personas/:id/warning", PersonaFrontendController, :warning)
  post("/personas/:id/connect", PersonaFrontendController, :connect)
  post("/personas/:id/disconnect", PersonaFrontendController, :disconnect)
  live("/personas/:id/edit", Live.Persona.Edit, :edit, as: :persona_frontend)
  resources("/personas", PersonaFrontendController, only: [:update])
  resources("/opmls", OpmlFrontendController, only: [:new, :create, :index, :delete])
  get("/opmls/:id/import", OpmlFrontendController, :import)
  get("/opmls/:id/download", OpmlFrontendController, :download)
  resources("/feed_backlogs", FeedBacklogFrontendController, only: [:new, :create])
  get("/my_recommendations", RecommendationFrontendController, :my_recommendations)
  resources("/recommendations", RecommendationFrontendController, only: [:create, :delete])
  delete("/manifestations/delete_all", ManifestationFrontendController, :delete_all)
  resources("/manifestations", ManifestationFrontendController, only: [:delete])

=== ADMIN ===
  get(
    "/episodes/remove_javascript_from_shownotes",
    EpisodeController,
    :remove_javascript_from_shownotes
  )
  get("/personas/merge", PersonaController, :merge)
  get(
    "/users/:user_id/category/:category_id/push_subscriptions",
    UserController,
    :push_subscriptions
  )
  post("/users/:id/unset_pro", UserController, :unset_pro)
  post("/alternate_feeds/create_from_backlog", AlternateFeedController, :create_from_backlog)
  post("/categories/execute_assign", CategoryController, :execute_assign)
  get("/backlog_feeds/subscribe", FeedBacklogController, :subscribe)
  get("/backlog_feeds/subscribe50", FeedBacklogController, :subscribe50)
  get("/backlog_feeds/import_100", FeedBacklogController, :import_100)
  get("/backlog_feeds/:id/import", FeedBacklogController, :import)
  delete("/feed_backlogs/delete_all", FeedBacklogController, :delete_all)
  resources("/backlog_feeds", FeedBacklogController)
  get("/opmls/:id/import", OpmlController, :import)
  live("/opmls", Live.Admin.Opml.Index, :index, as: :opml)
  get("/images/cache_missing", ImageController, :cache_missing)
  get("/images/remove_duplicates", ImageController, :remove_duplicates)
  resources("/images", ImageController, only: [:create])
  get("/podcasts/:id/fix_owner", PodcastController, :fix_owner)
  get("/podcasts/fix_languages", PodcastController, :fix_languages)
  get("/search/push_missing", SearchController, :push_missing)
  get("/search/reset_all", SearchController, :reset_all)
  get("/search/delete_orphans", SearchController, :delete_orphans)
  get("/search/migrate", SearchController, :migrate)
  get("/maintenance/update_podcast_counters", MaintenanceController, :update_podcast_counters)
  get("/maintenance/catch_up_thumbnailed", MaintenanceController, :catch_up_thumbnailed)
  get("/maintenance/exception_notification", MaintenanceController, :exception_notification)