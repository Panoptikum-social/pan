scope "/search", PanWeb do
  post("/", SearchFrontendController, :new)
  live("/:index/:term", Live.Search, :search, as: :search_frontend)

scope "/", PanWeb do
  live("/categories/:id/latest_episodes", Live.Category.LatestEpisodes, :latest_episodes,
    as: :category_frontend
  )
  get("/categories/:id/categorized", CategoryFrontendController, :categorized)
  get("/podcasts/liked", PodcastFrontendController, :liked)
  get("/podcasts/popular", PodcastFrontendController, :popular)
  live("/podcasts/:id", Live.Podcast.Show, :show, as: :podcast_frontend)
  live("/podcasts", Live.Podcast.Index, :index, as: :podcast_frontend)
  get("/podcasts/:id/feeds", PodcastFrontendController, :feeds)
  get("/qrcode/:code", QRCodeFrontendController, :generate)
  live("/episodes/:id", Live.Episode.Show, :show, as: :episode_frontend)
  live("/episodes", Live.Episode.Index, :index, as: :episode_frontend)
  live("/users/new", Live.User.New, :new, as: :user_frontend)
  live("/users/:id", Live.User.Show, :show, as: :user_frontend)
  resources("/users", UserFrontendController, only: [:index, :create])
  get("/pro_features", PageFrontendController, :pro_features)
  get("/personas/:id/grant_access", PersonaFrontendController, :grant_access)
  live("/personas", Live.Persona.Index, :index, as: :persona_frontend)
  resources("/personas", PersonaFrontendController, only: [:show])
  get("/forgot_password", UserController, :forgot_password)
  post("/request_login_link", UserController, :request_login_link)
  live("/sessions/new", Live.Session.New, :new, as: :session)
  resources("/sessions", SessionController, only: [:create, :delete])
  get("/sessions/login_via_token", SessionController, :login_via_token)
  get("/sessions/confirm_email", SessionController, :confirm_email)
  live("/recommendations", Live.Recommendation.Index, :index, as: :recommendation_frontend)
  live("/recommendations/random", Live.Recommendation.Random, :random,
    as: :recommendation_frontend
  )
  get("/vienna-beamers", MaintenanceController, :vienna_beamers)
  get("/2016/:month/:day/:file", MaintenanceController, :blog_2016)
  get("/2017/:month/:day/:file", MaintenanceController, :blog_2017)
  live("/:pid", Live.Persona.Show, :persona, as: :persona_frontend)

scope "/", PanWeb do
  live("/episodes/:id/player", Live.Episode.Player, :player, as: :episode_frontend)
  live("/podcasts/:id/subscribe_button", Live.Podcast.Subscribe, :subscribe_button,
    as: :podcast_frontend
  )

scope "/mydata", PanWeb do
  get("/download", UserJsonDownloadController, :download)

scope "/pan", PanWeb do
  get("/users/payment_info", UserFrontendController, :payment_info)
  post("/users/like_all_subscribed", UserFrontendController, :like_all_subscribed)
  post("/users/follow_all_subscribed", UserFrontendController, :follow_all_subscribed)
  get("/my_podcasts", UserFrontendController, :my_podcasts)
  get("/my_profile", UserFrontendController, :my_profile)
  get("/my_data", UserFrontendController, :my_data)
  delete("/delete_my_account", UserFrontendController, :delete_my_account)
  get("/edit", UserFrontendController, :edit)
  put("/update", UserFrontendController, :update)
  get("/edit_password", UserFrontendController, :edit_password)
  put("/update_password", UserFrontendController, :update_password)
  post("/go_pro", UserFrontendController, :go_pro)
  post("/personas/:id/claim", PersonaFrontendController, :claim)
  get("/personas/:id/warning", PersonaFrontendController, :warning)
  post("/personas/:id/connect", PersonaFrontendController, :connect)
  post("/personas/:id/disconnect", PersonaFrontendController, :disconnect)
  live("/personas/:id/edit", Live.Persona.Edit, :edit, as: :persona_frontend)
  resources("/personas", PersonaFrontendController, only: [:update])
  resources("/opmls", OpmlFrontendController, only: [:new, :create, :index, :delete])
  get("/opmls/:id/import", OpmlFrontendController, :import)
  get("/opmls/:id/download", OpmlFrontendController, :download)
  resources("/feed_backlogs", FeedBacklogFrontendController, only: [:new, :create])
  get("/my_recommendations", RecommendationFrontendController, :my_recommendations)
  delete("/my_recommendations/delete_all", RecommendationFrontendController, :delete_all)
  resources("/recommendations", RecommendationFrontendController, only: [:create, :delete])
  delete("/subscriptions/", SubscriptionFrontendController, :delete_all)
  delete("/follows/unfollow_all_categories", FollowFrontendController, :unfollow_all_categories)
  delete("/follows/unfollow_all_personas", FollowFrontendController, :unfollow_all_personas)
  delete("/follows/unfollow_all_podcasts", FollowFrontendController, :unfollow_all_podcasts)
  delete("/follows/unfollow_all_users", FollowFrontendController, :unfollow_all_users)
  delete("/likes/unlike_all_categories", LikeFrontendController, :unlike_all_categories)
  delete("/likes/unlike_all_chapters", LikeFrontendController, :unlike_all_chapters)
  delete("/likes/unlike_all_episodes", LikeFrontendController, :unlike_all_episodes)
  delete("/likes/unlike_all_personas", LikeFrontendController, :unlike_all_personas)
  delete("/likes/unlike_all_podcasts", LikeFrontendController, :unlike_all_podcasts)
  delete("/likes/unlike_all_users", LikeFrontendController, :unlike_all_users)
  delete("/manifestations/delete_all", ManifestationFrontendController, :delete_all)
  resources("/manifestations", ManifestationFrontendController, only: [:delete])

scope "/pro", PanWeb do
  get("/personas/:id/toggle_delegation", PersonaFrontendController, :toggle_delegation)
  get("/personas/:id/cancel_redirect", PersonaFrontendController, :cancel_redirect)
  get("/personas/:id/redirect", PersonaFrontendController, :redirect)
  get("/invoices/:id/", InvoiceFrontendController, :download)
