<h2>Merge personas</h2>

<div class="table_wraper">
  <table class="table table-striped table-condensed transpose">
    <thead>
      <tr>
        <th>ID</th>
        <th>Pid</th>
        <th>Name</th>
        <th>URI</th>
        <th>Email</th>
        <th>Image url</th>
        <th>Description</th>
        <th>Merge to</th>
        <th>Podcasts</th>
        <th>Episodes</th>
      </tr>
    </thead>
    <tbody>
      <%= for persona <- @personas do %>
        <tr>
          <td><%= link persona.id, to: persona_frontend_path(@conn, :show, persona.id) %></td>
          <td><%= persona.pid %></td>
          <td><%= persona.name %></td>
          <td><%= persona.uri %></td>
          <td><%= persona.email %></td>
          <td><%= persona.image_url %></td>
          <td><%= persona.description %></td>
          <td>
            <%= for persona_to <- @personas do %>
              <%= unless persona.id == persona_to.id do
                    link(persona_to.id, to: persona_path(@conn, :merge, from: persona.id, to: persona_to.id),
                         class: "btn")
                  end %>
            <% end %>
          </td>
          <td>
            <%= for engagement <- persona.engagements do %>
              <%= engagement.podcast_id %><br/>
            <% end %>
          </td>
          <td>
            <%= for gig <- persona.gigs do %>
              <%= gig.episode_id %><br/>
            <% end %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<script>
  // Code from: https://github.com/kmclaugh/Transpose_Table
  $(document).ready(function() {
    transpose_table();
  })

  function transpose_table() {
    $('table.transpose').each(function(){

      var parent = $(this).parent();

      //Clone the table and flatten out the clone to remove any thead and tbody elements
      var table_clone = $(this).clone();
      var the_thead = false;
      if ($(table_clone).has('thead').length != 0){
        var table_head = $(table_clone).find("thead");
        the_thead = $(table_head).clone().empty();
        $(table_head).children().first().unwrap();
      }
      var the_tbody = false;
      if ($(table_clone).has('tbody').length != 0){
        var table_body = $(table_clone).find("tbody");
        the_tbody = $(table_body).clone().empty();
        $(table_body).children().first().unwrap();
      }

      //Loop through each row of the flattened cloned table to transpose columns and rows into the new rows
      var newrows = [];
      $(table_clone).children().each(function(){
        var i = 0;
        var row_copy = $(this).clone().removeAttr("id").empty();
        $(this).children().each(function(){
          // FIXME: Rename file to heex again (and fix the 'expected tag name'-issue)
          if (newrows.length <= i) {
            newrows.push($(row_copy[0].outerHTML));
          }
          update_id(this)
          newrows[i].append($(this)[0].outerHTML);
          i++;
        });
      });

      //create the new table with the original thead and tbody if they exists
      var new_table = $(this).clone().empty();
      update_id(new_table);
      if (the_thead != false) {
        update_id(the_thead);
        new_table.append(the_thead);
      }
      if (the_tbody != false) {
        update_id(the_tbody);
        new_table.append(the_tbody);
      }

      //Add the new rows to either the thead, tbody, or table
      for (i = 0; i < newrows.length; i++) {
        var new_row = newrows[i];
        if (i == 0 && the_thead != false) {
          $(new_table).find("thead").append(new_row)
        }
        else if (the_tbody != false) {
          $(new_table).find("tbody").append(new_row)
        }
        else {
          new_table.append(new_row);
        }
      }

      $(new_table).addClass('show');
      parent.append(new_table);

      $(this).addClass('hidden');
    })
  }

  function update_id(element){
    /*Appends "_transposed" to the given element's id if it has an ID*/
    if ($(element).attr('id')) {
      $(element).attr('id', $(element).attr('id')+'_transposed')
    }
  }
</script>
